using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xamarin.Forms;
using AppCEP.Servico.Modelo;
using AppCEP.Servico;

namespace AppCEP
{
    public partial class MainPage : ContentPage
    {
        public MainPage()
        {
            InitializeComponent();
            btCEP.Clicked += BuscarCEP;
        }

        private void BuscarCEP(object sender, EventArgs args)
        {
            //Lógica
            string cep = CEP.Text.Trim();
            if (isValidCEP(cep))
            {
                try
                {
                    Endereco end = ViaCEPServico.BuscarEnderecoViaCEP(cep);
                    if(end != null)
                    {
                        lblResultado.Text = string.Format("Endereço: {2} , {3},{0} {1}", end.localidade, end.uf, end.logradouro, end.bairro);
                        CEP.Text = "";
                    }
                    else
                    {
                        DisplayAlert("Erro", "O CEP " + cep + " não foi encontrado!", "OK");
                    }
                }
                catch (Exception e)
                {
                    DisplayAlert("Erro Crítico", e.Message, "OK");
                }
            } 
        }

        private bool isValidCEP(string cep)
        {
            bool valido = true;
            if (cep.Length != 8)
            {
                //erro
                DisplayAlert("Erro","CEP inválido! O CEP deve conter 8 números.", "OK");
                valido = false;
            }
            int NovoCEP = 0;
            if (!int.TryParse(cep, out NovoCEP))
            {
                //erro
                DisplayAlert("Erro", "CEP inválido! O CEP deve conter apenas números.", "OK");
                valido = false;
            }
            return valido;
        }
    }
}
